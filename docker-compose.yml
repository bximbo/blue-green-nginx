# v2+ says no need to declare the version

services:
  app_blue:
    image: ${BLUE_IMAGE}
    container_name: app_blue
    environment:
      APP_POOL: blue
      RELEASE_ID: ${RELEASE_ID_BLUE}
      PORT: 3000
    expose:
      - "3000"
    ports:
      - "${PORT_BLUE}:3000"
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:3000/healthz"]
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 5s

  app_green:
    image: ${GREEN_IMAGE}
    container_name: app_green
    environment:
      APP_POOL: green
      RELEASE_ID: ${RELEASE_ID_GREEN}
      PORT: 3000
    expose:
      - "3000"
    ports:
      - "${PORT_GREEN}:3000"
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:3000/healthz"]
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 5s

  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    ports:
      - "${NGINX_PORT}:80"
    environment:
      ACTIVE_POOL: ${ACTIVE_POOL:-blue}
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: ".template"
      NGINX_ENVSUBST_OUTPUT_DIR: "/etc/nginx/conf.d"
      NGINX_ENVSUBST_TEMPLATE_DIR: "/etc/nginx/templates"
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/templates/default.conf.template:ro
      - ./nginx/setup-pool.sh:/docker-entrypoint.d/05-setup-pool.envsh:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      app_blue:
        condition: service_started
      app_green:
        condition: service_started

  # --- Stage 3: Log-watcher sidecar ---
  alert_watcher:
    image: python:3.11-slim
    container_name: alert_watcher
    working_dir: /app
    environment:
      SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL}
      ERROR_RATE_THRESHOLD: ${ERROR_RATE_THRESHOLD:-2}
      WINDOW_SIZE: ${WINDOW_SIZE:-200}
      ALERT_COOLDOWN_SEC: ${ALERT_COOLDOWN_SEC:-300}
      MAINTENANCE_MODE: ${MAINTENANCE_MODE:-false}
      NGINX_LOG_FILE: /logs/access_stage3.log
    volumes:
      - ./watcher.py:/app/watcher.py:ro
      - ./requirements.txt:/app/requirements.txt:ro
      - nginx_logs:/logs
    command: bash -lc "pip install --no-cache-dir -r requirements.txt && python /app/watcher.py"
    depends_on:
      - nginx

volumes:
  nginx_logs:

networks:
  default:
    name: bluegreen_net