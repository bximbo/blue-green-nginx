# Combined upstream: blue = main, green = backup
    server app_blue:3000 max_fails=1 fail_timeout=3s;
    # 'app_green' acts as the backup server for blue-green deployments; traffic is routed here only if 'app_blue' is unavailable.
    server app_green:3000 backup;
    server app_blue:3000 max_fails=1 fail_timeout=3s;
    server app_green:3000 backup;


server {
    listen 80;
    proxy_set_header Host $host;
    proxy_set_header Host $host;

    location / {
        proxy_pass_header X-App-Pool;
        proxy_pass_header X-Release-Id;
        proxy_connect_timeout 2s;
        proxy_read_timeout 3s;
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_pass http://app_pool;
    }
    # Optional but explicit â€“ proxy /version to same upstream
    location /version {
        proxy_pass_header X-App-Pool;
        proxy_pass_header X-Release-Id;
        proxy_pass http://app_pool;
    }
        add_header Content-Type text/plain;
        return 200 "nginx alive\n";
    }
    location /healthz {
        return 200 "nginx alive\n";
    }

