resolver 127.0.0.11 valid=10s ipv6=off;

# --- Stage 3: JSON access logs with pool/release/upstream metadata ---
# This file is included inside the global `http {}` via conf.d, so http-level
# directives (like log_format) are valid here.

log_format stage3_json escape=json
  '{'
    '"time_local":"$time_local",'
    '"remote_addr":"$remote_addr",'
    '"request":"$request",'
    '"status":$status,'
    '"bytes_sent":$bytes_sent,'
    '"request_time":$request_time,'
    '"upstream_response_time":"$upstream_response_time",'
    '"upstream_status":"$upstream_status",'
    '"upstream_addr":"$upstream_addr",'
    '"pool":"$upstream_http_x_app_pool",'
    '"release":"$upstream_http_x_release_id",'
    '"request_id":"$request_id"'
  '}';

# Write to a file in the shared volume so the watcher can tail it
access_log /var/log/nginx/access_stage3.log stage3_json;
error_log  /var/log/nginx/error.log warn;

upstream app_pool {
    # Dynamic primary/backup assignment based on ACTIVE_POOL
    # Backup flag is injected via environment variables
    server app_blue:3000 max_fails=1 fail_timeout=3s ${BLUE_BACKUP};
    server app_green:3000 max_fails=1 fail_timeout=3s ${GREEN_BACKUP};
    keepalive 32;
}

server {
    listen 80;

    # Propagate visibility headers to clients (helps manual verification)
    add_header X-Active-Pool "$upstream_http_x_app_pool" always;
    add_header X-Release-Id "$upstream_http_x_release_id" always;

    # Proxy headers setup
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Connection persistence
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    # Failover timing configuration
    proxy_connect_timeout 500ms;
    proxy_send_timeout 1s;
    proxy_read_timeout 1s;

    # Upstream retry behavior
    proxy_next_upstream error timeout http_500 http_502 http_503 http_504 non_idempotent;
    proxy_next_upstream_tries 2;
    proxy_next_upstream_timeout 2s;

    # Preserve application headers (logged via $upstream_http_*)
    proxy_pass_header X-App-Pool;
    proxy_pass_header X-Release-Id;

    # Buffering settings
    proxy_buffering off;
    proxy_request_buffering on;

    # Also log at server level (belt & braces)
    access_log /var/log/nginx/access_stage3.log stage3_json;

    location / {
        proxy_pass http://app_pool;
    }

    location /healthz {
        proxy_pass http://app_pool/healthz;
    }

    location /version {
        proxy_pass http://app_pool/version;
    }
}
